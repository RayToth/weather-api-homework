[{"F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\index.tsx":"1","F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\reportWebVitals.ts":"2","F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\App.tsx":"3","F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\pages\\Home.tsx":"4","F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\components\\CurrentWeatherCard.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":293,"mtime":1610540317522,"results":"9","hashOfConfig":"7"},{"size":759,"mtime":1610540312876,"results":"10","hashOfConfig":"7"},{"size":644,"mtime":1610541881556,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1b85gyy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\index.tsx",[],["24","25"],"F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\reportWebVitals.ts",[],"F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\App.tsx",[],"F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\pages\\Home.tsx",["26","27","28","29","30"],"import React, { useState } from \"react\";\r\nimport CurrentWeatherCard from \"../components/CurrentWeatherCard\";\r\n\r\nexport const Home: React.FC = () => {\r\n  const [temperature, setTemperature] = useState(\"\");\r\n  const [feelsLikeTemp, setFeelsLikeTemp] = useState(\"\");\r\n  const [weatherDescription, setWeatherDescription] = useState(\"\");\r\n  const [weatherIcon, setWeatherIcon] = useState(\"\");\r\n  const [currentLocation, setCurrentLocation] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <CurrentWeatherCard\r\n        temperature={temperature}\r\n        feelsLikeTemp={feelsLikeTemp}\r\n        weatherDescription={weatherDescription}\r\n        weatherIcon={weatherIcon}\r\n        currentLocation={currentLocation}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","F:\\codecool\\weather-api-homework\\weather-api-homework\\src\\components\\CurrentWeatherCard.tsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":23,"nodeType":"37","messageId":"38","endLine":5,"endColumn":37},{"ruleId":"35","severity":1,"message":"39","line":6,"column":25,"nodeType":"37","messageId":"38","endLine":6,"endColumn":41},{"ruleId":"35","severity":1,"message":"40","line":7,"column":30,"nodeType":"37","messageId":"38","endLine":7,"endColumn":51},{"ruleId":"35","severity":1,"message":"41","line":8,"column":23,"nodeType":"37","messageId":"38","endLine":8,"endColumn":37},{"ruleId":"35","severity":1,"message":"42","line":9,"column":27,"nodeType":"37","messageId":"38","endLine":9,"endColumn":45},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'setTemperature' is assigned a value but never used.","Identifier","unusedVar","'setFeelsLikeTemp' is assigned a value but never used.","'setWeatherDescription' is assigned a value but never used.","'setWeatherIcon' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]